/**
 * Code.js
 * Module x·ª≠ l√Ω logic li√™n quan ƒë·∫øn m√£ khuy·∫øn m√£i/giftcode
 */

import { Entity } from '../core/Entity.js';

export class Code extends Entity {
  constructor(codeData) {
    super(codeData.id, codeData.name || codeData.id, codeData.description || '');
    this.code = codeData.code || codeData.id;
    this.rewards = codeData.rewards || {
      gold: 0,
      exp: 0,
      items: []
    };
    this.maxUses = codeData.maxUses || 1; // S·ªë l·∫ßn s·ª≠ d·ª•ng t·ªëi ƒëa (-1 l√† kh√¥ng gi·ªõi h·∫°n)
    this.currentUses = codeData.currentUses || 0; // S·ªë l·∫ßn ƒë√£ s·ª≠ d·ª•ng
    this.userLimit = codeData.userLimit || 1; // S·ªë l·∫ßn s·ª≠ d·ª•ng t·ªëi ƒëa c·ªßa m·ªói ng∆∞·ªùi ch∆°i
    this.expireDate = codeData.expireDate || null; // Th·ªùi gian h·∫øt h·∫°n (null l√† kh√¥ng gi·ªõi h·∫°n)
    this.isActive = codeData.isActive !== undefined ? codeData.isActive : true; // Tr·∫°ng th√°i k√≠ch ho·∫°t
    this.requiredLevel = codeData.requiredLevel || 0; // Y√™u c·∫ßu c·∫•p ƒë·ªô t·ªëi thi·ªÉu
    this.usedUsers = codeData.usedUsers || {}; // L∆∞u tr·ªØ ng∆∞·ªùi ch∆°i ƒë√£ s·ª≠ d·ª•ng v√† s·ªë l·∫ßn s·ª≠ d·ª•ng
    this.createdAt = codeData.createdAt || Date.now();
    this.data = codeData; // L∆∞u tr·ªØ d·ªØ li·ªáu g·ªëc
  }

  /**
   * Chuy·ªÉn ƒë·ªïi ƒë·ªëi t∆∞·ª£ng th√†nh d·∫°ng JSON ƒë·ªÉ l∆∞u tr·ªØ
   * @returns {Object} - D·ªØ li·ªáu JSON
   */
  toJSON() {
    return {
      id: this.getId(),
      name: this.getName(),
      description: this.getDescription(),
      code: this.code,
      rewards: this.rewards,
      maxUses: this.maxUses,
      currentUses: this.currentUses,
      userLimit: this.userLimit,
      expireDate: this.expireDate,
      isActive: this.isActive,
      requiredLevel: this.requiredLevel,
      usedUsers: this.usedUsers,
      createdAt: this.createdAt
    };
  }

  /**
   * Ki·ªÉm tra xem m√£ code c√≥ h·ª£p l·ªá v√† c√≥ th·ªÉ s·ª≠ d·ª•ng kh√¥ng
   * @returns {boolean} - K·∫øt qu·∫£ ki·ªÉm tra
   */
  isValid() {
    // Ki·ªÉm tra tr·∫°ng th√°i k√≠ch ho·∫°t
    if (!this.isActive) return false;
    
    // Ki·ªÉm tra s·ªë l·∫ßn s·ª≠ d·ª•ng
    if (this.maxUses !== -1 && this.currentUses >= this.maxUses) return false;
    
    // Ki·ªÉm tra th·ªùi gian h·∫øt h·∫°n
    if (this.expireDate && Date.now() > this.expireDate) return false;
    
    return true;
  }

  /**
   * Ki·ªÉm tra xem ng∆∞·ªùi ch∆°i c√≥ th·ªÉ s·ª≠ d·ª•ng m√£ code kh√¥ng
   * @param {string} userId - ID ng∆∞·ªùi ch∆°i
   * @param {number} playerLevel - C·∫•p ƒë·ªô ng∆∞·ªùi ch∆°i
   * @returns {Object} - K·∫øt qu·∫£ ki·ªÉm tra v√† l√Ω do
   */
  canUse(userId, playerLevel) {
    // Ki·ªÉm tra tr·∫°ng th√°i m√£ code
    if (!this.isValid()) {
      return {
        canUse: false,
        reason: 'M√£ code kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n.'
      };
    }
    
    // Ki·ªÉm tra c·∫•p ƒë·ªô ng∆∞·ªùi ch∆°i
    if (playerLevel < this.requiredLevel) {
      return {
        canUse: false,
        reason: `C·∫ßn ƒë·∫°t c·∫•p ƒë·ªô ${this.requiredLevel} ƒë·ªÉ s·ª≠ d·ª•ng m√£ code n√†y.`
      };
    }
    
    // Ki·ªÉm tra s·ªë l·∫ßn s·ª≠ d·ª•ng c·ªßa ng∆∞·ªùi ch∆°i
    const userUses = this.usedUsers[userId] || 0;
    if (userUses >= this.userLimit) {
      return {
        canUse: false,
        reason: 'B·∫°n ƒë√£ s·ª≠ d·ª•ng h·∫øt s·ªë l·∫ßn cho ph√©p c·ªßa m√£ code n√†y.'
      };
    }
    
    return {
      canUse: true,
      reason: 'B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng m√£ code n√†y.'
    };
  }

  /**
   * S·ª≠ d·ª•ng m√£ code cho ng∆∞·ªùi ch∆°i
   * @param {string} userId - ID ng∆∞·ªùi ch∆°i
   * @returns {Object} - Ph·∫ßn th∆∞·ªüng t·ª´ m√£ code
   */
  use(userId) {
    // TƒÉng s·ªë l·∫ßn s·ª≠ d·ª•ng chung
    this.currentUses += 1;
    
    // TƒÉng s·ªë l·∫ßn s·ª≠ d·ª•ng c·ªßa ng∆∞·ªùi ch∆°i
    if (!this.usedUsers[userId]) {
      this.usedUsers[userId] = 0;
    }
    this.usedUsers[userId] += 1;
    
    // Tr·∫£ v·ªÅ ph·∫ßn th∆∞·ªüng
    return { ...this.rewards };
  }

  /**
   * L·∫•y m√¥ t·∫£ chi ti·∫øt v·ªÅ m√£ code
   * @returns {string} - M√¥ t·∫£ chi ti·∫øt
   */
  getDetailedDescription() {
    let desc = `üìã M√£ Code: ${this.code}\n\n`;
    
    if (this.getName() !== this.code) {
      desc += `T√™n: ${this.getName()}\n`;
    }
    
    if (this.getDescription()) {
      desc += `${this.getDescription()}\n\n`;
    }
    
    // Tr·∫°ng th√°i
    desc += `Tr·∫°ng th√°i: ${this.isActive ? '‚úÖ ƒêang ho·∫°t ƒë·ªông' : '‚ùå Kh√¥ng ho·∫°t ƒë·ªông'}\n`;
    
    // Th·ªùi gian h·∫øt h·∫°n
    if (this.expireDate) {
      const expireDate = new Date(this.expireDate);
      const isExpired = Date.now() > this.expireDate;
      
      desc += `H·∫øt h·∫°n: ${expireDate.toLocaleString()}`;
      if (isExpired) {
        desc += ' (ƒê√£ h·∫øt h·∫°n)';
      }
      desc += '\n';
    } else {
      desc += 'H·∫øt h·∫°n: Kh√¥ng gi·ªõi h·∫°n\n';
    }
    
    // S·ªë l·∫ßn s·ª≠ d·ª•ng
    if (this.maxUses === -1) {
      desc += `S·ª≠ d·ª•ng: ${this.currentUses} (Kh√¥ng gi·ªõi h·∫°n)\n`;
    } else {
      desc += `S·ª≠ d·ª•ng: ${this.currentUses}/${this.maxUses}\n`;
    }
    
    // Gi·ªõi h·∫°n ng∆∞·ªùi ch∆°i
    desc += `Gi·ªõi h·∫°n m·ªói ng∆∞·ªùi: ${this.userLimit} l·∫ßn\n`;
    
    // Y√™u c·∫ßu c·∫•p ƒë·ªô
    if (this.requiredLevel > 0) {
      desc += `Y√™u c·∫ßu c·∫•p ƒë·ªô: ${this.requiredLevel}\n`;
    }
    
    // Ph·∫ßn th∆∞·ªüng
    desc += `\nüéÅ Ph·∫ßn th∆∞·ªüng:\n`;
    if (this.rewards.gold > 0) {
      desc += `- V√†ng: ${this.rewards.gold}\n`;
    }
    if (this.rewards.exp > 0) {
      desc += `- Kinh nghi·ªám: ${this.rewards.exp}\n`;
    }
    if (this.rewards.items && this.rewards.items.length > 0) {
      desc += `- V·∫≠t ph·∫©m:\n`;
      this.rewards.items.forEach(item => {
        desc += `  ‚Ä¢ ${item.itemId} x${item.amount || 1}\n`;
      });
    }
    
    return desc;
  }
} 